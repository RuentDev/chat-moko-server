generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(cuid())
  username       String        @unique
  email          String        @unique
  password       String        @db.LongText
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  // Add more user-related fields as needed
  Message        Message[]
  Conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String?
}

// Conversation model representing a conversation between users
model Conversation {
  id           String    @id @default(cuid())
  participants User[] // Many-to-many relationship with users
  messages     Message[] // One-to-many relationship with messages
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

// Message model representing individual messages sent in conversations
model Message {
  id             String       @id @default(cuid())
  content        String       @db.LongText
  media          String? // URL or file path to media (e.g., images, videos)
  files          File[]
  senderId       String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime?
  User           User?        @relation(fields: [userId], references: [id])
  userId         String?
}

model File {
  id        String  @id @default(cuid())
  url       String // URL or file path to the file
  message   Message @relation(fields: [messageId], references: [id])
  messageId String
}
